version: '3.10'

services:
  prefect:
    image: prefecthq/prefect:2.14-python3.11
    command: prefect server start
    container_name: prefect-server
    environment:
      - PREFECT_SERVER_API_HOST=0.0.0.0
      - PREFECT_API_DATABASE_CONNECTION_URL=postgresql+asyncpg://${PREFECT_DB_USER}:${PREFECT_DB_PW}@prefect_db:5432/${PREFECT_DB_NAME} # Needed if using postgres and not sqlite
      # - PREFECT_UI_API_URL=https://localhost/api. needed if nginx is handling ssl termination
      - PREFECT_LOGGING_LEVEL=DEBUG
    ports:
      - "127.0.0.1:4200:4200"
    depends_on:
      - prefect_db
    networks:
      mle_net:


  prefect_db:
    image: postgres:14.5-alpine
    container_name: prefect-db
    environment:
      - POSTGRES_USER=${PREFECT_DB_USER}
      - POSTGRES_PASSWORD=${PREFECT_DB_PW}
      - POSTGRES_DB=${PREFECT_DB_NAME}
    volumes:
      - ./data/prefect_db:/var/lib/postgresql/data:rw
    restart: unless-stopped
    networks:
      mle_net:


  tiled:
    # see the file ./tiled/deploy/config.yml for detailed configuration of tiled
    image: ghcr.io/bluesky/tiled:v0.1.0a118
    container_name: tiled-server
    ports:
      - "127.0.0.1:8000:8000"
    environment:
      - TILED_DB_USER=${TILED_DB_USER}
      - TILED_DB_PW=${TILED_DB_PW}
      - TILED_DB_NAME=${TILED_DB_NAME}
      - TILED_DB_SERVER=${TILED_DB_SERVER}
      - TILED_SINGLE_USER_API_KEY=${TILED_SINGLE_USER_API_KEY}
    volumes:
      - ./tiled/deploy:/deploy
      - ${READ_DIR}:/tiled_storage
    depends_on:
      - tiled_db
    networks:
      mle_net:


  tiled_db:
    image: postgres:14.5-alpine
    container_name: tiled-db
    environment:
      - POSTGRES_USER=${TILED_DB_USER}
      - POSTGRES_PASSWORD=${TILED_DB_PW}
      - POSTGRES_DB=${TILED_DB_NAME}
    volumes:
      - ./data/tiled_db:/var/lib/postgresql/data:rw
      - ${READ_DIR}:/tiled_storage
    restart: unless-stopped
    networks:
      mle_net:


  mlcoach:
    restart: "unless-stopped"
    container_name: "mlcoach"
    build:
      context: "."
    command: "python frontend.py"
    volumes:
      - $READ_DIR:/tiled_storage
      - ./src:/app/work/src
      - ./frontend.py:/app/work/frontend.py
    environment:
       # Dash
      APP_HOST: "0.0.0.0"
      APP_PORT: "8050"
      # Data directories
      READ_DIR_MOUNT: "${READ_DIR}"   # Used to mount the read directory in podman jobs
      WRITE_DIR_MOUNT: "${WRITE_DIR}" # Used to mount the write directory in podman jobs
      READ_DIR: "/tiled_storage"
      WRITE_DIR: "/tiled_storage/writable"
      # Tiled
      DEFAULT_TILED_URI: '${DEFAULT_TILED_URI}'
      DATA_TILED_KEY: '${DATA_TILED_KEY}'
      LABELS_TILED_URI: '${LABELS_TILED_URI}'
      LABELS_TILED_API_KEY: '${LABELS_TILED_API_KEY}'
      MASK_TILED_URI: '${MASK_TILED_URI}'
      MASK_TILED_API_KEY: '${MASK_TILED_API_KEY}'
      RESULTS_TILED_URI: '${RESULTS_TILED_URI}'
      RESULTS_TILED_API_KEY: '${RESULTS_TILED_API_KEY}'
      # Prefect
      PREFECT_API_URL: '${PREFECT_API_URL}'
      FLOW_NAME: '${FLOW_NAME}'
      TIMEZONE: "${TIMEZONE}"
      PREFECT_TAGS: "${PREFECT_TAGS}"
      FLOW_TYPE: "${FLOW_TYPE}"
      CONTAINER_NETWORK: "${CONTAINER_NETWORK}"
      # Slurm jobs
      PARTITIONS_CPU: "${PARTITIONS_CPU}"
      MAX_TIME_CPU: "${MAX_TIME_CPU}"
      RESERVATIONS_CPU: "${RESERVATIONS_CPU}"
      PARTITIONS_GPU: "${PARTITIONS_GPU}"
      RESERVATIONS_GPU: "${RESERVATIONS_GPU}"
      MAX_TIME_GPU: "${MAX_TIME_GPU}"
      SUBMISSION_SSH_KEY: "${SUBMISSION_SSH_KEY}"
      FORWARD_PORTS: "${FORWARD_PORTS}"
      # Mode
      MODE: "development"
      USER: ${USER}
    ports:
      - 127.0.0.1:8062:8050
    depends_on:
      - tiled
      - prefect
    networks:
      - mle_net

  classifier:
    image: ghcr.io/mlexchange/mlex_image_classification:main

networks:
  mle_net:
    name: mle_net
    driver: bridge


# If services are already running on a different docker compose, use the following network definition
# networks:
#   mle_net:
#     external: true
